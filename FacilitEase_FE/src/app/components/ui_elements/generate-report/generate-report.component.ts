import { Component, ElementRef, ViewChild } from '@angular/core';
import { ReportService } from '@app/features/service/httpService/reportService/report.service';
import html2canvas from 'html2canvas';
// @ts-ignore
import * as pdfMake from 'pdfmake/build/pdfmake';
// @ts-ignore
import * as pdfFonts from 'pdfmake/build/vfs_fonts';
pdfMake.vfs = pdfFonts.pdfMake.vfs;
@Component({
  selector: 'app-generate-report',
  templateUrl: './generate-report.component.html',
  styleUrls: ['./generate-report.component.css'],
})
export class GenerateReportComponent {
  constructor(private reportService: ReportService) {}

  DownloadPDF() {
    const barChartElement = this.reportService.barChartCanvas;
    const doughnutChartElement = this.reportService.doughnutChartCanvas;

    Promise.all([
      html2canvas(barChartElement),
      html2canvas(doughnutChartElement),
    ]).then(([barCanvas, doughnutCanvas]) => {
      const barImageData = barCanvas.toDataURL('image/png');
      const doughnutImageData = doughnutCanvas.toDataURL('image/png');

      const barImage = { image: barImageData, width: 500 }; // Adjust width as needed
      const doughnutImage = { image: doughnutImageData, width: 200 }; // Adjust width as needed

      const documentDefinition = {
        content: [
          { text: 'Report', style: 'header' },
          {
            text: 'Date: ' + new Date().toLocaleDateString(),
            alignment: 'right',
          },
          {
            text: 'Generated by: L2Admin',
            alignment: 'right',
            margin: [0, 0, 0, 20],
          },
          { text: 'Bar Chart', style: 'subheader' },
          barImage,
          { text: 'Doughnut Chart', style: 'subheader' },
          doughnutImage,
        ],
        styles: {
          header: { fontSize: 18, bold: true, margin: [0, 0, 0, 10] },
          subheader: { fontSize: 16, bold: true, margin: [0, 10, 0, 5] },
        },
      };

      pdfMake.createPdf(documentDefinition).open();
    });
  }
}
